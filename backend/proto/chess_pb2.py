# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chess.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chess.proto',
  package='chess',
  syntax='proto2',
  serialized_pb=_b('\n\x0b\x63hess.proto\x12\x05\x63hess\"n\n\x04Move\x12\x13\n\x0b\x66rom_square\x18\x01 \x01(\t\x12\x11\n\tto_square\x18\x02 \x01(\t\x12\x11\n\tpromotion\x18\x03 \x01(\t\x1a+\n\x08Response\x12\x1f\n\x05state\x18\x01 \x01(\x0b\x32\x10.chess.GameState\"\x18\n\tGameState\x12\x0b\n\x03\x66\x65n\x18\x01 \x01(\t')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_MOVE_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='chess.Move.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='chess.Move.Response.state', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=132,
)

_MOVE = _descriptor.Descriptor(
  name='Move',
  full_name='chess.Move',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='from_square', full_name='chess.Move.from_square', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='to_square', full_name='chess.Move.to_square', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='promotion', full_name='chess.Move.promotion', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MOVE_RESPONSE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=132,
)


_GAMESTATE = _descriptor.Descriptor(
  name='GameState',
  full_name='chess.GameState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='fen', full_name='chess.GameState.fen', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=134,
  serialized_end=158,
)

_MOVE_RESPONSE.fields_by_name['state'].message_type = _GAMESTATE
_MOVE_RESPONSE.containing_type = _MOVE
DESCRIPTOR.message_types_by_name['Move'] = _MOVE
DESCRIPTOR.message_types_by_name['GameState'] = _GAMESTATE

Move = _reflection.GeneratedProtocolMessageType('Move', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _MOVE_RESPONSE,
    __module__ = 'chess_pb2'
    # @@protoc_insertion_point(class_scope:chess.Move.Response)
    ))
  ,
  DESCRIPTOR = _MOVE,
  __module__ = 'chess_pb2'
  # @@protoc_insertion_point(class_scope:chess.Move)
  ))
_sym_db.RegisterMessage(Move)
_sym_db.RegisterMessage(Move.Response)

GameState = _reflection.GeneratedProtocolMessageType('GameState', (_message.Message,), dict(
  DESCRIPTOR = _GAMESTATE,
  __module__ = 'chess_pb2'
  # @@protoc_insertion_point(class_scope:chess.GameState)
  ))
_sym_db.RegisterMessage(GameState)


# @@protoc_insertion_point(module_scope)
